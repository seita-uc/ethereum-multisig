{
  "contractName": "HasNoEther",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipRenounced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "reclaimEther",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"reclaimEther\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"}],\"name\":\"OwnershipRenounced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"reclaimEther()\":{\"details\":\"Transfers all Ether held by this contract to the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current `owner` to renounce ownership\"},\"transferOwnership(address)\":{\"details\":\"Allows the current `owner` to transfer ownership\",\"params\":{\"_newOwner\":\"The new `owner`\"}}},\"title\":\"HasNoEther is for contracts that should not own Ether\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/HasNoEther.sol\":\"HasNoEther\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/HasNoEther.sol\":{\"keccak256\":\"0x4391c8fd062c4b773680601169143b9cbc9d088ea334b74a831e1c8c43036c97\",\"urls\":[\"bzzr://6fca085ac5302a5b36ff138b554ad46022c893749ed61f5a3fba3b970f23a225\"]},\"/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/Ownable.sol\":{\"keccak256\":\"0xfaba3819a7502890371b85b2d61b30a4865a94f51c566076f0ad34328ff73af3\",\"urls\":[\"bzzr://23e8124913d79fbf4d76a0ddb758715aa225b16eba9f2af38ac1731019ea22b0\"]}},\"version\":1}",
  "bytecode": "0x608060405260008054600160a060020a03191633179055341561008357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f6d757374206e6f742073656e6420457468657200000000000000000000000000604482015290519081900360640190fd5b61047e806100926000396000f3006080604052600436106100615763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a681146100705780638da5cb5b146100875780639f727c27146100c5578063f2fde38b146100da575b34801561006d57600080fd5b50005b34801561007c57600080fd5b50610085610108565b005b34801561009357600080fd5b5061009c6101f0565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100d157600080fd5b5061008561020c565b3480156100e657600080fd5b5061008573ffffffffffffffffffffffffffffffffffffffff600435166102c2565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206265206f776e657200000000000000000000000000000000000000604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461029257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206265206f776e657200000000000000000000000000000000000000604482015290519081900360640190fd5b6040513390303180156108fc02916000818181858888f193505050501580156102bf573d6000803e3d6000fd5b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461034857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206265206f776e657200000000000000000000000000000000000000604482015290519081900360640190fd5b6102bf8173ffffffffffffffffffffffffffffffffffffffff811615156103d057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f63616e6e6f742072656e6f756e6365206f776e65727368697000000000000000604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820a0e0ac16d8106d2273a631ac97211df1ece00cae221554e0acca21e40d1a3ab50029",
  "deployedBytecode": "0x6080604052600436106100615763ffffffff7c0100000000000000000000000000000000000000000000000000000000600035041663715018a681146100705780638da5cb5b146100875780639f727c27146100c5578063f2fde38b146100da575b34801561006d57600080fd5b50005b34801561007c57600080fd5b50610085610108565b005b34801561009357600080fd5b5061009c6101f0565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b3480156100d157600080fd5b5061008561020c565b3480156100e657600080fd5b5061008573ffffffffffffffffffffffffffffffffffffffff600435166102c2565b60005473ffffffffffffffffffffffffffffffffffffffff16331461018e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206265206f776e657200000000000000000000000000000000000000604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff909116917ff8df31144d9c2f0f6b59d69b8b98abd5459d07f2742c4df920b25aae33c6482091a26000805473ffffffffffffffffffffffffffffffffffffffff19169055565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff16331461029257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206265206f776e657200000000000000000000000000000000000000604482015290519081900360640190fd5b6040513390303180156108fc02916000818181858888f193505050501580156102bf573d6000803e3d6000fd5b50565b60005473ffffffffffffffffffffffffffffffffffffffff16331461034857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f6d757374206265206f776e657200000000000000000000000000000000000000604482015290519081900360640190fd5b6102bf8173ffffffffffffffffffffffffffffffffffffffff811615156103d057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f63616e6e6f742072656e6f756e6365206f776e65727368697000000000000000604482015290519081900360640190fd5b6000805460405173ffffffffffffffffffffffffffffffffffffffff808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff191673ffffffffffffffffffffffffffffffffffffffff929092169190911790555600a165627a7a72305820a0e0ac16d8106d2273a631ac97211df1ece00cae221554e0acca21e40d1a3ab50029",
  "sourceMap": "143:465:1:-;;;850:5:2;:18;;-1:-1:-1;;;;;;850:18:2;858:10;850:18;;;280:9:1;:14;272:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;143:465;;;;;;",
  "deployedSourceMap": "143:465:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;143:465:1;;1110:123:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1110:123:2;;;;;;283:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;283:20:2;;;;;;;;;;;;;;;;;;;;;;;503:103:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;503:103:1;;;;1342:111:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1342:111:2;;;;;;;1110:123;1001:5;;;;987:10;:19;979:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:5;;;1173:25;;1192:5;;;;;1173:25;;;1224:1;1208:18;;-1:-1:-1;;1208:18:2;;;1110:123::o;283:20::-;;;;;;:::o;503:103:1:-;1001:5:2;;;;987:10;:19;979:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;556:42:1;;:10;;584:4;576:21;556:42;;;;;;;;;576:21;556:10;:42;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;556:42:1;503:103::o;1342:111:2:-;1001:5;;;;987:10;:19;979:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1417:29;1436:9;1627:23;;;;;1619:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1716:5;;;1695:38;;;;;;;1716:5;;;1695:38;;;1743:5;:17;;-1:-1:-1;;1743:17:2;;;;;;;;;;;;1553:214::o",
  "source": "//pragma solidity ^0.5.6;\npragma solidity ^0.4.24;\n\nimport \"./Ownable.sol\";\n\n\n/// @title HasNoEther is for contracts that should not own Ether\ncontract HasNoEther is Ownable {\n\n    /// @dev This contructor rejects incoming Ether\n    constructor() public payable {\n        require(msg.value == 0, \"must not send Ether\");\n    }\n\n    /// @dev Disallows direct send by default function not being `payable`\n    function() external {}\n\n    /// @dev Transfers all Ether held by this contract to the owner.\n    function reclaimEther() external onlyOwner {\n        msg.sender.transfer(address(this).balance); \n    }\n}\n",
  "sourcePath": "/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/HasNoEther.sol",
  "ast": {
    "absolutePath": "/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/HasNoEther.sol",
    "exportedSymbols": {
      "HasNoEther": [
        96
      ]
    },
    "id": 97,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:24:1"
      },
      {
        "absolutePath": "/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 185,
        "src": "52:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 184,
              "src": "166:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$184",
                "typeString": "contract Ownable"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "166:7:1"
          }
        ],
        "contractDependencies": [
          184
        ],
        "contractKind": "contract",
        "documentation": "@title HasNoEther is for contracts that should not own Ether",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          184
        ],
        "name": "HasNoEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "262:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "280:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "280:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "293:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "280:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d757374206e6f742073656e64204574686572",
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:21:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d79d49aa0fa6210e401541d6bc12026135b9ec74f8e1d724d9f8bab39e9d8408",
                          "typeString": "literal_string \"must not send Ether\""
                        },
                        "value": "must not send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d79d49aa0fa6210e401541d6bc12026135b9ec74f8e1d724d9f8bab39e9d8408",
                          "typeString": "literal_string \"must not send Ether\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1106,
                        1107
                      ],
                      "referencedDeclaration": 1107,
                      "src": "272:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "272:46:1"
                }
              ]
            },
            "documentation": "@dev This contructor rejects incoming Ether",
            "id": 74,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 96,
            "src": "233:92:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "426:2:1",
              "statements": []
            },
            "documentation": "@dev Disallows direct send by default function not being `payable`",
            "id": 78,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:1"
            },
            "scope": 96,
            "src": "406:22:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "546:60:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "584:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HasNoEther_$96",
                                "typeString": "contract HasNoEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HasNoEther_$96",
                                "typeString": "contract HasNoEther"
                              }
                            ],
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "576:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "576:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "576:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "556:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "556:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "556:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "556:42:1"
                }
              ]
            },
            "documentation": "@dev Transfers all Ether held by this contract to the owner.",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 81,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 80,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 131,
                  "src": "536:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "536:9:1"
              }
            ],
            "name": "reclaimEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:1"
            },
            "scope": 96,
            "src": "503:103:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 97,
        "src": "143:465:1"
      }
    ],
    "src": "26:583:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/HasNoEther.sol",
    "exportedSymbols": {
      "HasNoEther": [
        96
      ]
    },
    "id": 97,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 59,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:24:1"
      },
      {
        "absolutePath": "/Users/seita/go/src/github.com/github.com/seita-uc/ethereum-multisig/contracts/Ownership/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 60,
        "nodeType": "ImportDirective",
        "scope": 97,
        "sourceUnit": 185,
        "src": "52:23:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 61,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 184,
              "src": "166:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$184",
                "typeString": "contract Ownable"
              }
            },
            "id": 62,
            "nodeType": "InheritanceSpecifier",
            "src": "166:7:1"
          }
        ],
        "contractDependencies": [
          184
        ],
        "contractKind": "contract",
        "documentation": "@title HasNoEther is for contracts that should not own Ether",
        "fullyImplemented": true,
        "id": 96,
        "linearizedBaseContracts": [
          96,
          184
        ],
        "name": "HasNoEther",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "262:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 66,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1103,
                            "src": "280:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 67,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "280:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "293:1:1",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "280:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6d757374206e6f742073656e64204574686572",
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "296:21:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d79d49aa0fa6210e401541d6bc12026135b9ec74f8e1d724d9f8bab39e9d8408",
                          "typeString": "literal_string \"must not send Ether\""
                        },
                        "value": "must not send Ether"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d79d49aa0fa6210e401541d6bc12026135b9ec74f8e1d724d9f8bab39e9d8408",
                          "typeString": "literal_string \"must not send Ether\""
                        }
                      ],
                      "id": 65,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1106,
                        1107
                      ],
                      "referencedDeclaration": 1107,
                      "src": "272:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "272:46:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "272:46:1"
                }
              ]
            },
            "documentation": "@dev This contructor rejects incoming Ether",
            "id": 74,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "244:2:1"
            },
            "payable": true,
            "returnParameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 96,
            "src": "233:92:1",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "426:2:1",
              "statements": []
            },
            "documentation": "@dev Disallows direct send by default function not being `payable`",
            "id": 78,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "414:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:1"
            },
            "scope": 96,
            "src": "406:22:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "546:60:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 89,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1120,
                              "src": "584:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_HasNoEther_$96",
                                "typeString": "contract HasNoEther"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_HasNoEther_$96",
                                "typeString": "contract HasNoEther"
                              }
                            ],
                            "id": 88,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "576:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "576:13:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 91,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "576:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1103,
                          "src": "556:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 86,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "556:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "556:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "556:42:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "ExpressionStatement",
                  "src": "556:42:1"
                }
              ]
            },
            "documentation": "@dev Transfers all Ether held by this contract to the owner.",
            "id": 95,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": null,
                "id": 81,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 80,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 131,
                  "src": "536:9:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "536:9:1"
              }
            ],
            "name": "reclaimEther",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "524:2:1"
            },
            "payable": false,
            "returnParameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "546:0:1"
            },
            "scope": 96,
            "src": "503:103:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 97,
        "src": "143:465:1"
      }
    ],
    "src": "26:583:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.26+commit.4563c3fc.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-06-26T05:57:25.368Z",
  "devdoc": {
    "methods": {
      "reclaimEther()": {
        "details": "Transfers all Ether held by this contract to the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current `owner` to renounce ownership"
      },
      "transferOwnership(address)": {
        "details": "Allows the current `owner` to transfer ownership",
        "params": {
          "_newOwner": "The new `owner`"
        }
      }
    },
    "title": "HasNoEther is for contracts that should not own Ether"
  },
  "userdoc": {
    "methods": {}
  }
}